//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.08.18 at 12:46:08 AM BRT 
//


package br.com.dmoutinho.messagegateway.model;

import java.io.File;
import java.io.StringReader;
import java.io.StringWriter;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the dmoutinho.com.br.messagegateway.model package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Command_QNAME = new QName("http://message-router.com.br/message", "message");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: dmoutinho.com.br.messagegateway.model
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Message }
     * 
     */
    public Message createMessage() {
        return new Message();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Message }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://message-router.com.br/command-message", name = "command")
    public JAXBElement<Message> createCommand(Message value) {
        return new JAXBElement<Message>(_Command_QNAME, Message.class, null, value);
    }
    

    public String toXML(Message message) throws JAXBException {

		StringWriter sw = new StringWriter();

		JAXBContext jaxbContext = JAXBContext.newInstance(Message.class);

		Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
		jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, false);
		jaxbMarshaller.marshal(this.createCommand(message),sw);

		return sw.toString();

	}

    public Message toMessage(File file) throws JAXBException {
        return (Message)JAXBContext.newInstance(Message.class).createUnmarshaller().unmarshal(file);
	};

    public Message toMessage(String str) throws JAXBException {
        return (Message)JAXBContext.newInstance(Message.class).createUnmarshaller().unmarshal(new StringReader(str));
	};
	
}
